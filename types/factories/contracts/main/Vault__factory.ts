/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vault, VaultInterface } from "../../../contracts/main/Vault";

const _abi = [
  {
    inputs: [],
    name: "CallerNotMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroTokenAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SharesBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SharesMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "protocolRegistry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accessController",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vaultManagerConfig",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "strategyManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "VaultInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessController",
    outputs: [
      {
        internalType: "contract IAccessController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burnShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vaultManagerConfig",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategyManager",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRegistry",
    outputs: [
      {
        internalType: "contract IProtocolRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManagerConfig",
    outputs: [
      {
        internalType: "contract IVaultManagerConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_withdrawToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slippage",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516129ce61004c600039600081816108cf0152818161090f015281816109d001528181610a100152610ba401526129ce6000f3fe60806040526004361061019c5760003560e01c806370a08231116100ec578063a9059cbb1161008a578063bc43cbaf11610064578063bc43cbaf1461049b578063dd62ed3e146104bc578063ee7a7c04146104dc578063f2fde38b146104fc57600080fd5b8063a9059cbb1461043a578063ad5c46481461045a578063b5c5f6721461047b57600080fd5b80638da5cb5b116100c65780638da5cb5b146103c75780639317c200146103e557806395d89b4114610405578063a457c2d71461041a57600080fd5b806370a082311461035b578063715018a6146103915780637656419f146103a657600080fd5b80633659cfe6116101595780634f1ef286116101335780634f1ef286146102f2578063528c198a1461030557806352d1902d146103255780636cc7718d1461033a57600080fd5b80633659cfe614610279578063395093511461029957806339b70e38146102b957600080fd5b806306fdde03146101a1578063095ea7b3146101cc5780630efe6a8b146101fc57806318160ddd1461021e57806323b872dd1461023d578063313ce5671461025d575b600080fd5b3480156101ad57600080fd5b506101b661051c565b6040516101c3919061225f565b60405180910390f35b3480156101d857600080fd5b506101ec6101e7366004612287565b6105ae565b60405190151581526020016101c3565b34801561020857600080fd5b5061021c6102173660046122b3565b6105c8565b005b34801561022a57600080fd5b506035545b6040519081526020016101c3565b34801561024957600080fd5b506101ec6102583660046122e8565b61089f565b34801561026957600080fd5b50604051601281526020016101c3565b34801561028557600080fd5b5061021c610294366004612329565b6108c5565b3480156102a557600080fd5b506101ec6102b4366004612287565b6109a4565b3480156102c557600080fd5b50610130546102da906001600160a01b031681565b6040516001600160a01b0390911681526020016101c3565b61021c6103003660046123e5565b6109c6565b34801561031157600080fd5b5061021c610320366004612287565b610a96565b34801561033157600080fd5b5061022f610b97565b34801561034657600080fd5b5061012f546102da906001600160a01b031681565b34801561036757600080fd5b5061022f610376366004612329565b6001600160a01b031660009081526033602052604090205490565b34801561039d57600080fd5b5061021c610c4a565b3480156103b257600080fd5b50610131546102da906001600160a01b031681565b3480156103d357600080fd5b506065546001600160a01b03166102da565b3480156103f157600080fd5b5061021c610400366004612469565b610c5e565b34801561041157600080fd5b506101b6610f3a565b34801561042657600080fd5b506101ec610435366004612287565b610f49565b34801561044657600080fd5b506101ec610455366004612287565b610fcf565b34801561046657600080fd5b5061012d546102da906001600160a01b031681565b34801561048757600080fd5b5061021c6104963660046122b3565b610fdd565b3480156104a757600080fd5b5061012e546102da906001600160a01b031681565b3480156104c857600080fd5b5061022f6104d7366004612516565b6111d3565b3480156104e857600080fd5b5061021c6104f7366004612287565b6111fe565b34801561050857600080fd5b5061021c610517366004612329565b6112f3565b60606036805461052b9061254f565b80601f01602080910402602001604051908101604052809291908181526020018280546105579061254f565b80156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050505050905090565b6000336105bc818585611369565b60019150505b92915050565b60026097540361061f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026097556001600160a01b03831661064b5760405163538ba4f960e01b815260040160405180910390fd5b8160000361066c576040516382c4a8c960e01b815260040160405180910390fd5b61012f546040516373a2049760e11b81526001600160a01b0385811660048301529091169063e744092e90602401602060405180830381865afa1580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db9190612589565b6106f85760405163c1ab6dc160e01b815260040160405180910390fd5b610702838361148d565b61013054604051630efe6a8b60e01b81526001600160a01b03858116600483015260248201859052604482018490526000921690630efe6a8b906064016020604051808303816000875af115801561075e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078291906125ab565b9050600061078f60355490565b60000361079d575080610843565b60008061013060009054906101000a90046001600160a01b03166001600160a01b031663d755017d6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261081c91908101906125c4565b915091508061082a60355490565b6108349086612688565b61083e919061269f565b925050505b61084d338261153f565b60408051858152602081018390526001600160a01b0387169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a350506001609755505050565b6000336108ad85828561161e565b6108b8858585611698565b60019150505b9392505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361090d5760405162461bcd60e51b8152600401610616906126c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610956600080516020612952833981519152546001600160a01b031690565b6001600160a01b03161461097c5760405162461bcd60e51b81526004016106169061270d565b61098581611866565b604080516000808252602082019092526109a19183919061186e565b50565b6000336105bc8185856109b783836111d3565b6109c19190612759565b611369565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a0e5760405162461bcd60e51b8152600401610616906126c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a57600080516020612952833981519152546001600160a01b031690565b6001600160a01b031614610a7d5760405162461bcd60e51b81526004016106169061270d565b610a8682611866565b610a928282600161186e565b5050565b61012e54604051632474521560e21b81527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b299190612589565b610b4657604051632f771b3d60e11b815260040160405180910390fd5b610b50828261153f565b816001600160a01b03167f6332ddaa8a69b5eb2524ec7ca317b7c2b01ecf678d584031415f81270977b8fc82604051610b8b91815260200190565b60405180910390a25050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c375760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610616565b5060008051602061295283398151915290565b610c526119de565b610c5c6000611a38565b565b600054610100900460ff1615808015610c7e5750600054600160ff909116105b80610c985750303b158015610c98575060005460ff166001145b610cfb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610616565b6000805460ff191660011790558015610d1e576000805461ff0019166101001790555b610d288383611a8a565b610d30611abb565b610d38611aea565b610d40611b19565b6001600160a01b03861615610d685760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b03851615610d905760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b03841615610db85760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b03871615610de05760405163538ba4f960e01b815260040160405180910390fd5b61013180546001600160a01b0319166001600160a01b03891690811790915560408051636572f88f60e11b8152905163cae5f11e916004808201926020929091908290030181865afa158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e919061276c565b61012d80546001600160a01b039283166001600160a01b03199182161790915561012f80548884169083168117909155610130805488851690841617905561012e80548a851693168317905560405190928a16907f1eace81f1e4f6ddaa5ab176157d96332f28c06bc77a3cea4cf191b0dfc334aa890610ee390899089908990612789565b60405180910390a48015610f31576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b60606037805461052b9061254f565b60003381610f5782866111d3565b905083811015610fb75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610616565b610fc48286868403611369565b506001949350505050565b6000336105bc818585611698565b60026097540361102f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610616565b60026097556000829003611056576040516382c4a8c960e01b815260040160405180910390fd5b61012f546040516373a2049760e11b81526001600160a01b0385811660048301529091169063e744092e90602401602060405180830381865afa1580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190612589565b6110e25760405163c1ab6dc160e01b815260040160405180910390fd5b6110ec3383611b40565b61013054604051635ae2fb3960e11b81526001600160a01b0385811660048301526024820185905260448201849052600092169063b5c5f672906064016020604051808303816000875af1158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c91906125ab565b90506111826001600160a01b0385163383611c8e565b60408051848152602081018390526001600160a01b0386169133917ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567910160405180910390a3505060016097555050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61012e54604051632474521560e21b81527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a660048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112919190612589565b6112ae57604051632f771b3d60e11b815260040160405180910390fd5b6112b88282611b40565b816001600160a01b03167fdb79cc492679ef2624944d6ed3cdbad5b974b5550de330ae18922f2944eec78a82604051610b8b91815260200190565b6112fb6119de565b6001600160a01b0381166113605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610616565b6109a181611a38565b6001600160a01b0383166113cb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610616565b6001600160a01b03821661142c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610616565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6114a26001600160a01b038316333084611cf1565b61012d546001600160a01b0383811691161480156114c05750600034115b1561152a5761012d60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561151657600080fd5b505af1158015610f31573d6000803e3d6000fd5b610a926001600160a01b038316333084611cf1565b6001600160a01b0382166115955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610616565b80603560008282546115a79190612759565b90915550506001600160a01b038216600090815260336020526040812080548392906115d4908490612759565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600061162a84846111d3565b9050600019811461169257818110156116855760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610616565b6116928484848403611369565b50505050565b6001600160a01b0383166116fc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610616565b6001600160a01b03821661175e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610616565b6001600160a01b038316600090815260336020526040902054818110156117d65760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610616565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061180d908490612759565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161185991815260200190565b60405180910390a3611692565b6109a16119de565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156118a6576118a183611d29565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611900575060408051601f3d908101601f191682019092526118fd918101906125ab565b60015b6119635760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610616565b60008051602061295283398151915281146119d25760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610616565b506118a1838383611dc5565b6065546001600160a01b03163314610c5c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610616565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16611ab15760405162461bcd60e51b8152600401610616906127c9565b610a928282611dea565b600054610100900460ff16611ae25760405162461bcd60e51b8152600401610616906127c9565b610c5c611e2a565b600054610100900460ff16611b115760405162461bcd60e51b8152600401610616906127c9565b610c5c611e5a565b600054610100900460ff16610c5c5760405162461bcd60e51b8152600401610616906127c9565b6001600160a01b038216611ba05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610616565b6001600160a01b03821660009081526033602052604090205481811015611c145760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610616565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611c43908490612814565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0383166024820152604481018290526118a190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611e88565b6040516001600160a01b03808516602483015283166044820152606481018290526116929085906323b872dd60e01b90608401611cba565b6001600160a01b0381163b611d965760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610616565b60008051602061295283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611dce83611f5a565b600082511180611ddb5750805b156118a1576116928383611f9a565b600054610100900460ff16611e115760405162461bcd60e51b8152600401610616906127c9565b6036611e1d8382612875565b5060376118a18282612875565b600054610100900460ff16611e515760405162461bcd60e51b8152600401610616906127c9565b610c5c33611a38565b600054610100900460ff16611e815760405162461bcd60e51b8152600401610616906127c9565b6001609755565b6000611edd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661208e9092919063ffffffff16565b8051909150156118a15780806020019051810190611efb9190612589565b6118a15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610616565b611f6381611d29565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6120025760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610616565b600080846001600160a01b03168460405161201d9190612935565b600060405180830381855af49150503d8060008114612058576040519150601f19603f3d011682016040523d82523d6000602084013e61205d565b606091505b50915091506120858282604051806060016040528060278152602001612972602791396120a5565b95945050505050565b606061209d84846000856120de565b949350505050565b606083156120b45750816108be565b8251156120c45782518084602001fd5b8160405162461bcd60e51b8152600401610616919061225f565b60608247101561213f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610616565b6001600160a01b0385163b6121965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610616565b600080866001600160a01b031685876040516121b29190612935565b60006040518083038185875af1925050503d80600081146121ef576040519150601f19603f3d011682016040523d82523d6000602084013e6121f4565b606091505b50915091506122048282866120a5565b979650505050505050565b60005b8381101561222a578181015183820152602001612212565b50506000910152565b6000815180845261224b81602086016020860161220f565b601f01601f19169290920160200192915050565b6020815260006108be6020830184612233565b6001600160a01b03811681146109a157600080fd5b6000806040838503121561229a57600080fd5b82356122a581612272565b946020939093013593505050565b6000806000606084860312156122c857600080fd5b83356122d381612272565b95602085013595506040909401359392505050565b6000806000606084860312156122fd57600080fd5b833561230881612272565b9250602084013561231881612272565b929592945050506040919091013590565b60006020828403121561233b57600080fd5b81356108be81612272565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561238557612385612346565b604052919050565b600067ffffffffffffffff8311156123a7576123a7612346565b6123ba601f8401601f191660200161235c565b90508281528383830111156123ce57600080fd5b828260208301376000602084830101529392505050565b600080604083850312156123f857600080fd5b823561240381612272565b9150602083013567ffffffffffffffff81111561241f57600080fd5b8301601f8101851361243057600080fd5b61243f8582356020840161238d565b9150509250929050565b600082601f83011261245a57600080fd5b6108be8383356020850161238d565b60008060008060008060c0878903121561248257600080fd5b863561248d81612272565b9550602087013561249d81612272565b945060408701356124ad81612272565b935060608701356124bd81612272565b9250608087013567ffffffffffffffff808211156124da57600080fd5b6124e68a838b01612449565b935060a08901359150808211156124fc57600080fd5b5061250989828a01612449565b9150509295509295509295565b6000806040838503121561252957600080fd5b823561253481612272565b9150602083013561254481612272565b809150509250929050565b600181811c9082168061256357607f821691505b60208210810361258357634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561259b57600080fd5b815180151581146108be57600080fd5b6000602082840312156125bd57600080fd5b5051919050565b600080604083850312156125d757600080fd5b825167ffffffffffffffff808211156125ef57600080fd5b818501915085601f83011261260357600080fd5b815160208282111561261757612617612346565b8160051b925061262881840161235c565b828152928401810192818101908985111561264257600080fd5b948201945b8486101561266057855182529482019490820190612647565b97909101519698969750505050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105c2576105c2612672565b6000826126bc57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b808201808211156105c2576105c2612672565b60006020828403121561277e57600080fd5b81516108be81612272565b6001600160a01b03841681526060602082018190526000906127ad90830185612233565b82810360408401526127bf8185612233565b9695505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b818103818111156105c2576105c2612672565b601f8211156118a157600081815260208120601f850160051c8101602086101561284e5750805b601f850160051c820191505b8181101561286d5782815560010161285a565b505050505050565b815167ffffffffffffffff81111561288f5761288f612346565b6128a38161289d845461254f565b84612827565b602080601f8311600181146128d857600084156128c05750858301515b600019600386901b1c1916600185901b17855561286d565b600085815260208120601f198616915b82811015612907578886015182559484019460019091019084016128e8565b50858210156129255787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161294781846020870161220f565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206b2fa6d715ef132bc10606de35ce534302565e27a3d748048caea7c54e76599464736f6c63430008140033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault;
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault;
  }
}
