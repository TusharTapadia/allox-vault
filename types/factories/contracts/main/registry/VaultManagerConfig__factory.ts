/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VaultManagerConfig,
  VaultManagerConfigInterface,
} from "../../../../contracts/main/registry/VaultManagerConfig";

const _abi = [
  {
    inputs: [],
    name: "CallerNotVaultManager",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "TokenAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "TokenDisallowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "VaultManagerFeesUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "accessController",
    outputs: [
      {
        internalType: "contract IAccessController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "allowDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "disallowDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolRegistry",
    outputs: [
      {
        internalType: "contract IProtocolRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
    ],
    name: "setVaultManagerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultManagerFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516116b261004c600039600081816102ca015281816103130152818161055301528181610593015261062601526116b26000f3fe6080604052600436106100dd5760003560e01c8063a61bf9ad1161007f578063d43a3a0711610059578063d43a3a0714610220578063e627259214610240578063e744092e14610260578063f2fde38b146102a057600080fd5b8063a61bf9ad146101ca578063b73dd249146101ea578063bc43cbaf1461020057600080fd5b806352d1902d116100bb57806352d1902d14610137578063715018a61461015f5780637656419f146101745780638da5cb5b146101ac57600080fd5b80633659cfe6146100e2578063485cc955146101045780634f1ef28614610124575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461119f565b6102c0565b005b34801561011057600080fd5b5061010261011f3660046111bc565b6103a8565b61010261013236600461123c565b610549565b34801561014357600080fd5b5061014c610619565b6040519081526020015b60405180910390f35b34801561016b57600080fd5b506101026106cc565b34801561018057600080fd5b5060fe54610194906001600160a01b031681565b6040516001600160a01b039091168152602001610156565b3480156101b857600080fd5b506033546001600160a01b0316610194565b3480156101d657600080fd5b506101026101e53660046112e4565b6106e0565b3480156101f657600080fd5b5061014c60fc5481565b34801561020c57600080fd5b5060fb54610194906001600160a01b031681565b34801561022c57600080fd5b5061010261023b3660046112e4565b61087e565b34801561024c57600080fd5b5061010261025b366004611396565b610ad1565b34801561026c57600080fd5b5061029061027b36600461119f565b60fd6020526000908152604090205460ff1681565b6040519015158152602001610156565b3480156102ac57600080fd5b506101026102bb36600461119f565b610bd7565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103115760405162461bcd60e51b8152600401610308906113af565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661035a600080516020611636833981519152546001600160a01b031690565b6001600160a01b0316146103805760405162461bcd60e51b8152600401610308906113fb565b61038981610c4d565b604080516000808252602082019092526103a591839190610c55565b50565b600054610100900460ff16158080156103c85750600054600160ff909116105b806103e25750303b1580156103e2575060005460ff166001145b6104455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610308565b6000805460ff191660011790558015610468576000805461ff0019166101001790555b610470610dc0565b610478610def565b610480610e16565b6001600160a01b0383166104a75760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0382166104ce5760405163538ba4f960e01b815260040160405180910390fd5b60fb80546001600160a01b038086166001600160a01b03199283161790925560fe8054928516929091169190911790558015610544576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105915760405162461bcd60e51b8152600401610308906113af565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105da600080516020611636833981519152546001600160a01b031690565b6001600160a01b0316146106005760405162461bcd60e51b8152600401610308906113fb565b61060982610c4d565b61061582826001610c55565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106b95760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610308565b5060008051602061163683398151915290565b6106d4610e45565b6106de6000610e9f565b565b60fb54604051632474521560e21b81527fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610772919061145c565b61078f57604051632f27482d60e21b815260040160405180910390fd5b60005b81518110156108435760006001600160a01b03168282815181106107b8576107b8611477565b60200260200101516001600160a01b0316036107e75760405163538ba4f960e01b815260040160405180910390fd5b600060fd60008484815181106107ff576107ff611477565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061083b8161148d565b915050610792565b507f4618fa737704315265f307600eb6299dbd99a658d005bd52ec2a64a177299f8b8160405161087391906114b4565b60405180910390a150565b60fb54604051632474521560e21b81527fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610910919061145c565b61092d57604051632f27482d60e21b815260040160405180910390fd5b60005b8151811015610aa15760006001600160a01b031682828151811061095657610956611477565b60200260200101516001600160a01b0316036109855760405163538ba4f960e01b815260040160405180910390fd5b60fe5482516000916001600160a01b03169063be934dcb908590859081106109af576109af611477565b60200260200101516040518263ffffffff1660e01b81526004016109e291906001600160a01b0391909116815260200190565b6040805180830381865afa1580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190611501565b8051909150610a445760405163c1ab6dc160e01b815260040160405180910390fd5b600160fd6000858581518110610a5c57610a5c611477565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790555080610a998161148d565b915050610930565b507f272dfe25b5b0c656af0461e366b26532af938a45b7c4946ff15be2bf78ba8e888160405161087391906114b4565b60fb54604051632474521560e21b81527fd1473398bb66596de5d1ea1fc8e303ff2ac23265adc9144b1b52065dc4f0934b60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b63919061145c565b610b8057604051632f27482d60e21b815260040160405180910390fd5b6103e8811115610ba3576040516358d620b360e01b815260040160405180910390fd5b60fc8190556040518181527e95c134c3f5bdbbdbaa081ec3e68dbef1389dded0e50969c41b5040ad4517ca90602001610873565b610bdf610e45565b6001600160a01b038116610c445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610308565b6103a581610e9f565b6103a5610e45565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c885761054483610ef1565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ce2575060408051601f3d908101601f19168201909252610cdf9181019061155e565b60015b610d455760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610308565b6000805160206116368339815191528114610db45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610308565b50610544838383610f8d565b600054610100900460ff16610de75760405162461bcd60e51b815260040161030890611577565b6106de610fb8565b600054610100900460ff166106de5760405162461bcd60e51b815260040161030890611577565b600054610100900460ff16610e3d5760405162461bcd60e51b815260040161030890611577565b6106de610fe8565b6033546001600160a01b031633146106de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381163b610f5e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610308565b60008051602061163683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f9683611016565b600082511180610fa35750805b1561054457610fb28383611056565b50505050565b600054610100900460ff16610fdf5760405162461bcd60e51b815260040161030890611577565b6106de33610e9f565b600054610100900460ff1661100f5760405162461bcd60e51b815260040161030890611577565b600160c955565b61101f81610ef1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6110be5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610308565b600080846001600160a01b0316846040516110d991906115e6565b600060405180830381855af49150503d8060008114611114576040519150601f19603f3d011682016040523d82523d6000602084013e611119565b606091505b509150915061114182826040518060600160405280602781526020016116566027913961114a565b95945050505050565b60608315611159575081611183565b8251156111695782518084602001fd5b8160405162461bcd60e51b81526004016103089190611602565b9392505050565b6001600160a01b03811681146103a557600080fd5b6000602082840312156111b157600080fd5b81356111838161118a565b600080604083850312156111cf57600080fd5b82356111da8161118a565b915060208301356111ea8161118a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611234576112346111f5565b604052919050565b6000806040838503121561124f57600080fd5b823561125a8161118a565b915060208381013567ffffffffffffffff8082111561127857600080fd5b818601915086601f83011261128c57600080fd5b81358181111561129e5761129e6111f5565b6112b0601f8201601f1916850161120b565b915080825287848285010111156112c657600080fd5b80848401858401376000848284010152508093505050509250929050565b600060208083850312156112f757600080fd5b823567ffffffffffffffff8082111561130f57600080fd5b818501915085601f83011261132357600080fd5b813581811115611335576113356111f5565b8060051b915061134684830161120b565b818152918301840191848101908884111561136057600080fd5b938501935b8385101561138a578435925061137a8361118a565b8282529385019390850190611365565b98975050505050505050565b6000602082840312156113a857600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b8051801515811461145757600080fd5b919050565b60006020828403121561146e57600080fd5b61118382611447565b634e487b7160e01b600052603260045260246000fd5b6000600182016114ad57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252825182820181905260009190848201906040850190845b818110156114f55783516001600160a01b0316835292840192918401916001016114d0565b50909695505050505050565b60006040828403121561151357600080fd5b6040516040810181811067ffffffffffffffff82111715611536576115366111f5565b60405261154283611447565b815260208301516115528161118a565b60208201529392505050565b60006020828403121561157057600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b838110156115dd5781810151838201526020016115c5565b50506000910152565b600082516115f88184602087016115c2565b9190910192915050565b60208152600082518060208401526116218160408501602087016115c2565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e6b0ff618f7911d40d46158f20db41fff68fee7937fb20f4fe0e5b78c0d38ae864736f6c63430008140033";

type VaultManagerConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultManagerConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultManagerConfig__factory extends ContractFactory {
  constructor(...args: VaultManagerConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<VaultManagerConfig> {
    return super.deploy(overrides || {}) as Promise<VaultManagerConfig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultManagerConfig {
    return super.attach(address) as VaultManagerConfig;
  }
  override connect(signer: Signer): VaultManagerConfig__factory {
    return super.connect(signer) as VaultManagerConfig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultManagerConfigInterface {
    return new utils.Interface(_abi) as VaultManagerConfigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultManagerConfig {
    return new Contract(address, _abi, signerOrProvider) as VaultManagerConfig;
  }
}
