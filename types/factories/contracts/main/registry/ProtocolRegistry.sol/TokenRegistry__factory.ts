/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenRegistry,
  TokenRegistryInterface,
} from "../../../../../contracts/main/registry/ProtocolRegistry.sol/TokenRegistry";

const _abi = [
  {
    inputs: [],
    name: "IncorrectArrayLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotInPriceOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressTreasury",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_token",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_handler",
        type: "address[]",
      },
    ],
    name: "EnableToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_token",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_handler",
        type: "address[]",
      },
    ],
    name: "enableToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenInformation",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "handler",
            type: "address",
          },
        ],
        internalType: "struct TokenRegistry.TokenRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "isEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setProtocolPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWETH",
        type: "address",
      },
    ],
    name: "updateWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161166361004c60003960008181610462015281816104ab01528181610565015281816105a5015261063801526116636000f3fe60806040526004361061012a5760003560e01c80637f51bb1f116100ab578063be934dcb1161006f578063be934dcb14610334578063c0c53b8b146103c2578063d770adc7146103e2578063f2fde38b146103fa578063fca513a81461041a578063fe9440d71461043857600080fd5b80637f51bb1f146102825780638da5cb5b146102a25780639015d371146102c0578063ad5c4648146102f9578063b0e21e8a1461031e57600080fd5b80634f1ef286116100f25780634f1ef286146101f757806352d1902d1461020a5780635ebfb4e21461022d57806361d027b31461024d578063715018a61461026d57600080fd5b806314f6c3be1461012f5780632630c12f1461016b5780633659cfe61461018b57806337269db1146101ad5780634e989118146101d7575b600080fd5b34801561013b57600080fd5b5060fe5461010090046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017757600080fd5b5060ff5461014e906001600160a01b031681565b34801561019757600080fd5b506101ab6101a636600461114e565b610458565b005b3480156101b957600080fd5b5060fe546101c79060ff1681565b6040519015158152602001610162565b3480156101e357600080fd5b506101ab6101f236600461116b565b610540565b6101ab6102053660046111d4565b61055b565b34801561021657600080fd5b5061021f61062b565b604051908152602001610162565b34801561023957600080fd5b506101ab610248366004611305565b6106de565b34801561025957600080fd5b5060fc5461014e906001600160a01b031681565b34801561027957600080fd5b506101ab610979565b34801561028e57600080fd5b506101ab61029d36600461114e565b61098d565b3480156102ae57600080fd5b506033546001600160a01b031661014e565b3480156102cc57600080fd5b506101c76102db36600461114e565b6001600160a01b0316600090815260fb602052604090205460ff1690565b34801561030557600080fd5b5060fe5461014e9061010090046001600160a01b031681565b34801561032a57600080fd5b5061021f60fd5481565b34801561034057600080fd5b5061039c61034f36600461114e565b604080518082018252600080825260209182018190526001600160a01b03938416815260fb825282902082518084019093525460ff81161515835261010090049092169181019190915290565b604080518251151581526020928301516001600160a01b03169281019290925201610162565b3480156103ce57600080fd5b506101ab6103dd366004611369565b6109de565b3480156103ee57600080fd5b5060fe5460ff166101c7565b34801561040657600080fd5b506101ab61041536600461114e565b610b8d565b34801561042657600080fd5b5060ff546001600160a01b031661014e565b34801561044457600080fd5b506101ab61045336600461114e565b610c03565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104a95760405162461bcd60e51b81526004016104a0906113b4565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104f26000805160206115e7833981519152546001600160a01b031690565b6001600160a01b0316146105185760405162461bcd60e51b81526004016104a090611400565b61052181610c5a565b6040805160008082526020820190925261053d91839190610c62565b50565b610548610dd2565b60fe805460ff1916911515919091179055565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105a35760405162461bcd60e51b81526004016104a0906113b4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105ec6000805160206115e7833981519152546001600160a01b031690565b6001600160a01b0316146106125760405162461bcd60e51b81526004016104a090611400565b61061b82610c5a565b61062782826001610c62565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106cb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104a0565b506000805160206115e783398151915290565b6106e6610dd2565b805182511461070857604051630ef9926760e21b815260040160405180910390fd5b60005b825181101561093b5760006001600160a01b03168382815181106107315761073161144c565b60200260200101516001600160a01b03160361076057604051630f58058360e11b815260040160405180910390fd5b60008282815181106107745761077461144c565b60200260200101516001600160a01b031663691bcc8885848151811061079c5761079c61144c565b60200260200101516040518263ffffffff1660e01b81526004016107cf91906001600160a01b0391909116815260200190565b602060405180830381865afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190611462565b60ff546040516387edbb8d60e01b81526001600160a01b038084166004830152670de0b6b3a76400006024830152929350600092909116906387edbb8d90604401602060405180830381865afa15801561086e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610892919061147f565b116108b057604051630684e02760e31b815260040160405180910390fd5b6109288483815181106108c5576108c561144c565b60200260200101518484815181106108df576108df61144c565b602002602001015160016001600160a01b03928316600090815260fb60205260409020805491151560ff199490931661010002939093166001600160a81b031990911617179055565b508061093381611498565b91505061070b565b507fcb496040e195bc7d15ae57c3f2ec04368d4bc61ce2ab2d3707af43e9028e7cc8828260405161096d929190611503565b60405180910390a15050565b610981610dd2565b61098b6000610e2c565b565b610995610dd2565b6001600160a01b0381166109bc5760405163e6c4247b60e01b815260040160405180910390fd5b60fc80546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16158080156109fe5750600054600160ff909116105b80610a185750303b158015610a18575060005460ff166001145b610a7b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104a0565b6000805460ff191660011790558015610a9e576000805461ff0019166101001790555b610aa6610e7e565b610aae610ea5565b6001600160a01b038416610ad557604051635600449360e11b815260040160405180910390fd5b6001600160a01b038216610afc5760405163538ba4f960e01b815260040160405180910390fd5b6107d060fd5560ff80546001600160a01b0319166001600160a01b038481169190911790915560fe8054610100600160a81b031916610100928616929092029190911790558015610b87576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b610b95610dd2565b6001600160a01b038116610bfa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a0565b61053d81610e2c565b610c0b610dd2565b6001600160a01b038116610c325760405163e6c4247b60e01b815260040160405180910390fd5b60fe80546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b61053d610dd2565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c9a57610c9583610ed4565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cf4575060408051601f3d908101601f19168201909252610cf19181019061147f565b60015b610d575760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104a0565b6000805160206115e78339815191528114610dc65760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104a0565b50610c95838383610f70565b6033546001600160a01b0316331461098b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661098b5760405162461bcd60e51b81526004016104a090611528565b600054610100900460ff16610ecc5760405162461bcd60e51b81526004016104a090611528565b61098b610f95565b6001600160a01b0381163b610f415760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104a0565b6000805160206115e783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f7983610fc5565b600082511180610f865750805b15610c9557610b878383611005565b600054610100900460ff16610fbc5760405162461bcd60e51b81526004016104a090611528565b61098b33610e2c565b610fce81610ed4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61106d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104a0565b600080846001600160a01b0316846040516110889190611597565b600060405180830381855af49150503d80600081146110c3576040519150601f19603f3d011682016040523d82523d6000602084013e6110c8565b606091505b50915091506110f08282604051806060016040528060278152602001611607602791396110f9565b95945050505050565b60608315611108575081611132565b8251156111185782518084602001fd5b8160405162461bcd60e51b81526004016104a091906115b3565b9392505050565b6001600160a01b038116811461053d57600080fd5b60006020828403121561116057600080fd5b813561113281611139565b60006020828403121561117d57600080fd5b8135801515811461113257600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111cc576111cc61118d565b604052919050565b600080604083850312156111e757600080fd5b82356111f281611139565b915060208381013567ffffffffffffffff8082111561121057600080fd5b818601915086601f83011261122457600080fd5b8135818111156112365761123661118d565b611248601f8201601f191685016111a3565b9150808252878482850101111561125e57600080fd5b80848401858401376000848284010152508093505050509250929050565b600082601f83011261128d57600080fd5b8135602067ffffffffffffffff8211156112a9576112a961118d565b8160051b6112b88282016111a3565b92835284810182019282810190878511156112d257600080fd5b83870192505b848310156112fa5782356112eb81611139565b825291830191908301906112d8565b979650505050505050565b6000806040838503121561131857600080fd5b823567ffffffffffffffff8082111561133057600080fd5b61133c8683870161127c565b9350602085013591508082111561135257600080fd5b5061135f8582860161127c565b9150509250929050565b60008060006060848603121561137e57600080fd5b833561138981611139565b9250602084013561139981611139565b915060408401356113a981611139565b809150509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561147457600080fd5b815161113281611139565b60006020828403121561149157600080fd5b5051919050565b6000600182016114b857634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b838110156114f85781516001600160a01b0316875295820195908201906001016114d3565b509495945050505050565b60408152600061151660408301856114bf565b82810360208401526110f081856114bf565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b8381101561158e578181015183820152602001611576565b50506000910152565b600082516115a9818460208701611573565b9190910192915050565b60208152600082518060208401526115d2816040850160208701611573565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205bab2eec1630bd480df64fe7ea938abb436a4d48d40226216bb2704a426a9a4464736f6c63430008140033";

type TokenRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenRegistry__factory extends ContractFactory {
  constructor(...args: TokenRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<TokenRegistry> {
    return super.deploy(overrides || {}) as Promise<TokenRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenRegistry {
    return super.attach(address) as TokenRegistry;
  }
  override connect(signer: Signer): TokenRegistry__factory {
    return super.connect(signer) as TokenRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenRegistryInterface {
    return new utils.Interface(_abi) as TokenRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenRegistry {
    return new Contract(address, _abi, signerOrProvider) as TokenRegistry;
  }
}
