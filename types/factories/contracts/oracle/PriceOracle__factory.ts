/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PriceOracle,
  PriceOracleInterface,
} from "../../../contracts/oracle/PriceOracle";

const _abi = [
  {
    inputs: [],
    name: "AggregatorAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "FeedNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectArrayLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceOracleExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceOracleInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "base",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "quote",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "contract AggregatorV2V3Interface[]",
        name: "aggregator",
        type: "address[]",
      },
    ],
    name: "addFeed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "updateFeed",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "base",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "quote",
        type: "address[]",
      },
      {
        internalType: "contract AggregatorV2V3Interface[]",
        name: "aggregator",
        type: "address[]",
      },
    ],
    name: "_addFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "_updateFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getEthUsdPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ethPath",
        type: "bool",
      },
    ],
    name: "getPriceForAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
    ],
    name: "getPriceForOneTokenInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getPriceForTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPriceTokenUSD18Decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_base",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPriceUSDToken",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getUsdEthPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_oracleExpirationThreshold",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleExpirationThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTimeout",
        type: "uint256",
      },
    ],
    name: "updateOracleExpirationThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611f6561004c6000396000818161040701528181610450015281816104ef0152818161052f01526105c20152611f656000f3fe60806040526004361061012a5760003560e01c806374a133fc116100ab578063ac41865a1161006f578063ac41865a14610325578063ad5c464814610345578063cd6dc68714610365578063db4cd14514610385578063e6780ba2146103a5578063f2fde38b146103bb57600080fd5b806374a133fc146102735780638536447a1461029357806387edbb8d146102b35780638da5cb5b146102d35780639e353c781461030557600080fd5b806358e2d3a8116100f257806358e2d3a8146101cc5780635e191675146101fe57806367de79061461021e578063698a5b961461023e578063715018a61461025e57600080fd5b806306c0566a1461012f5780633659cfe6146101625780634f1ef2861461018457806352d1902d1461019757806357e833a9146101ac575b600080fd5b34801561013b57600080fd5b5061014f61014a3660046116bd565b6103db565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061018261017d3660046116fe565b6103fd565b005b610182610192366004611762565b6104e5565b3480156101a357600080fd5b5061014f6105b5565b3480156101b857600080fd5b5061014f6101c736600461180a565b610668565b3480156101d857600080fd5b506101ec6101e7366004611836565b610744565b60405160ff9091168152602001610159565b34801561020a57600080fd5b50610182610219366004611907565b61080b565b34801561022a57600080fd5b5061014f6102393660046119ee565b610ae7565b34801561024a57600080fd5b5061014f6102593660046119ee565b610b5a565b34801561026a57600080fd5b50610182610bbc565b34801561027f57600080fd5b5061018261028e366004611a07565b610bd0565b34801561029f57600080fd5b5061014f6102ae366004611a52565b610cc6565b3480156102bf57600080fd5b5061014f6102ce36600461180a565b610d67565b3480156102df57600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610159565b34801561031157600080fd5b506101826103203660046119ee565b610e48565b34801561033157600080fd5b5061014f610340366004611836565b610e55565b34801561035157600080fd5b5060fb546102ed906001600160a01b031681565b34801561037157600080fd5b5061018261038036600461180a565b610e62565b34801561039157600080fd5b5061014f6103a03660046116fe565b610fa1565b3480156103b157600080fd5b5061014f60fd5481565b3480156103c757600080fd5b506101826103d63660046116fe565b61101d565b6000806103e88584610d67565b90506103f48482610668565b95945050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361044e5760405162461bcd60e51b815260040161044590611a8e565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610497600080516020611ee9833981519152546001600160a01b031690565b6001600160a01b0316146104bd5760405162461bcd60e51b815260040161044590611ada565b6104c681611093565b604080516000808252602082019092526104e29183919061109b565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361052d5760405162461bcd60e51b815260040161044590611a8e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610576600080516020611ee9833981519152546001600160a01b031690565b6001600160a01b03161461059c5760405162461bcd60e51b815260040161044590611ada565b6105a582611093565b6105b18282600161109b565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106555760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610445565b50600080516020611ee983398151915290565b60008061067784610348610e55565b9050600061068785610348610744565b60ff1690506000856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190611b26565b9050600061070260ff83166012611b5f565b905061070f81600a611c56565b8461071b85600a611c56565b6107259089611c62565b61072f9190611c79565b6107399190611c79565b979650505050505050565b60008061077684846001600160a01b03918216600090815260fc60209081526040808320938516835292905220541690565b90506001600160a01b03811661079f57604051637d53846960e11b815260040160405180910390fd5b806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190611b26565b9150505b92915050565b610813611206565b81518351148015610825575080518251145b61084257604051630ef9926760e21b815260040160405180910390fd5b60005b8351811015610aa65760006001600160a01b031684828151811061086b5761086b611c9b565b60200260200101516001600160a01b03160361089a5760405163e6c4247b60e01b815260040160405180910390fd5b60006001600160a01b03168382815181106108b7576108b7611c9b565b60200260200101516001600160a01b0316036108e65760405163e6c4247b60e01b815260040160405180910390fd5b60006001600160a01b031682828151811061090357610903611c9b565b60200260200101516001600160a01b0316036109325760405163e6c4247b60e01b815260040160405180910390fd5b60006001600160a01b031660fc600086848151811061095357610953611c9b565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600001600085848151811061099257610992611c9b565b6020908102919091018101516001600160a01b039081168352908201929092526040016000205416146109d85760405163a8bc506b60e01b815260040160405180910390fd5b8181815181106109ea576109ea611c9b565b602002602001015160fc6000868481518110610a0857610a08611c9b565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000016000858481518110610a4757610a47611c9b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508080610a9e90611cb1565b915050610845565b507fa3ef6d0fe7abf04012dd37037505cc7ac565ab3ec921d650839c2caf56067a0a838383604051610ada93929190611d0e565b60405180910390a1505050565b600080610b0a73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610348611260565b90506000610b2e73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610348610744565b60ff169050610b3e81600a611c56565b610b488386611c62565b610b529190611c79565b949350505050565b600080610b7d73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610348611260565b90506000610ba173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610348610744565b60ff16905081610bb282600a611c56565b610b489086611c62565b610bc4611206565b610bce600061134d565b565b610bd8611206565b6001600160a01b038316610bff5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b038216610c265760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b038116610c4d5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b03838116600081815260fc602090815260408083208786168085529083529281902080546001600160a01b03191695871695861790558051938452908301919091528101919091527f06538d21a7dcbc9a8129705dfea4680fb591e5e83b8be724c94615b6e82c18c490606001610ada565b60008115610ced576000610cda8585610d67565b9050610ce581610b5a565b915050610d60565b6000610d0f73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610348611260565b90506000610d3373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610348610744565b60ff169050610d5b86610d4783600a611c56565b610d518886611c62565b6101c79190611c79565b925050505b9392505050565b600080610d7684610348610e55565b90506000610d8685610348610744565b60ff16905060008590506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190611b26565b90506000610e0660ff83166012611b5f565b9050610e1384600a611c56565b610e1e82600a611c56565b610e288988611c62565b610e329190611c62565b610e3c9190611c79565b98975050505050505050565b610e50611206565b60fd55565b6000806108018484611260565b600054610100900460ff1615808015610e825750600054600160ff909116105b80610e9c5750303b158015610e9c575060005460ff166001145b610eff5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610445565b6000805460ff191660011790558015610f22576000805461ff0019166101001790555b610f2a61139f565b610f326113ce565b610f3a6113f5565b60fb80546001600160a01b0319166001600160a01b03851617905560fd8290558015610f9c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610ada565b505050565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190611b26565b61101190600a611d80565b9050610d608382610d67565b611025611206565b6001600160a01b03811661108a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610445565b6104e28161134d565b6104e2611206565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156110ce57610f9c83611424565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611128575060408051601f3d908101601f1916820190925261112591810190611d8f565b60015b61118b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610445565b600080516020611ee983398151915281146111fa5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610445565b50610f9c8383836114c0565b6033546001600160a01b03163314610bce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b6001600160a01b03808316600090815260fc602090815260408083208585168452909152808220548151633fabe5a360e21b81529151929384938493929091169163feaf968c9160048083019260a09291908290030181865afa1580156112cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ef9190611dc7565b509350509250504260fd54826113059190611e17565b1015611324576040516303bdf82560e11b815260040160405180910390fd5b816000036113455760405163c626342b60e01b815260040160405180910390fd5b509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166113c65760405162461bcd60e51b815260040161044590611e2a565b610bce6114eb565b600054610100900460ff16610bce5760405162461bcd60e51b815260040161044590611e2a565b600054610100900460ff1661141c5760405162461bcd60e51b815260040161044590611e2a565b610bce61151b565b6001600160a01b0381163b6114915760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610445565b600080516020611ee983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6114c983611549565b6000825111806114d65750805b15610f9c576114e58383611589565b50505050565b600054610100900460ff166115125760405162461bcd60e51b815260040161044590611e2a565b610bce3361134d565b600054610100900460ff166115425760405162461bcd60e51b815260040161044590611e2a565b6001606555565b61155281611424565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6115f15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610445565b600080846001600160a01b03168460405161160c9190611e99565b600060405180830381855af49150503d8060008114611647576040519150601f19603f3d011682016040523d82523d6000602084013e61164c565b606091505b50915091506103f48282604051806060016040528060278152602001611f09602791396060831561167e575081610d60565b82511561168e5782518084602001fd5b8160405162461bcd60e51b81526004016104459190611eb5565b6001600160a01b03811681146104e257600080fd5b6000806000606084860312156116d257600080fd5b83356116dd816116a8565b925060208401356116ed816116a8565b929592945050506040919091013590565b60006020828403121561171057600080fd5b8135610d60816116a8565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561175a5761175a61171b565b604052919050565b6000806040838503121561177557600080fd5b8235611780816116a8565b915060208381013567ffffffffffffffff8082111561179e57600080fd5b818601915086601f8301126117b257600080fd5b8135818111156117c4576117c461171b565b6117d6601f8201601f19168501611731565b915080825287848285010111156117ec57600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806040838503121561181d57600080fd5b8235611828816116a8565b946020939093013593505050565b6000806040838503121561184957600080fd5b8235611854816116a8565b91506020830135611864816116a8565b809150509250929050565b600067ffffffffffffffff8211156118895761188961171b565b5060051b60200190565b600082601f8301126118a457600080fd5b813560206118b96118b48361186f565b611731565b82815260059290921b840181019181810190868411156118d857600080fd5b8286015b848110156118fc5780356118ef816116a8565b83529183019183016118dc565b509695505050505050565b60008060006060848603121561191c57600080fd5b833567ffffffffffffffff8082111561193457600080fd5b61194087838801611893565b945060209150818601358181111561195757600080fd5b61196388828901611893565b94505060408601358181111561197857600080fd5b86019050601f8101871361198b57600080fd5b80356119996118b48261186f565b81815260059190911b820183019083810190898311156119b857600080fd5b928401925b828410156119df5783356119d0816116a8565b825292840192908401906119bd565b80955050505050509250925092565b600060208284031215611a0057600080fd5b5035919050565b600080600060608486031215611a1c57600080fd5b8335611a27816116a8565b92506020840135611a37816116a8565b91506040840135611a47816116a8565b809150509250925092565b600080600060608486031215611a6757600080fd5b8335611a72816116a8565b92506020840135915060408401358015158114611a4757600080fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611b3857600080fd5b815160ff81168114610d6057600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561080557610805611b49565b600181815b80851115611bad578160001904821115611b9357611b93611b49565b80851615611ba057918102915b93841c9390800290611b77565b509250929050565b600082611bc457506001610805565b81611bd157506000610805565b8160018114611be75760028114611bf157611c0d565b6001915050610805565b60ff841115611c0257611c02611b49565b50506001821b610805565b5060208310610133831016604e8410600b8410161715611c30575081810a610805565b611c3a8383611b72565b8060001904821115611c4e57611c4e611b49565b029392505050565b6000610d608383611bb5565b808202811582820484141761080557610805611b49565b600082611c9657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201611cc357611cc3611b49565b5060010190565b600081518084526020808501945080840160005b83811015611d035781516001600160a01b031687529582019590820190600101611cde565b509495945050505050565b606081526000611d216060830186611cca565b602083820381850152611d348287611cca565b8481036040860152855180825282870193509082019060005b81811015611d725784516001600160a01b031683529383019391830191600101611d4d565b509098975050505050505050565b6000610d6060ff841683611bb5565b600060208284031215611da157600080fd5b5051919050565b805169ffffffffffffffffffff81168114611dc257600080fd5b919050565b600080600080600060a08688031215611ddf57600080fd5b611de886611da8565b9450602086015193506040860151925060608601519150611e0b60808701611da8565b90509295509295909350565b8082018082111561080557610805611b49565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015611e90578181015183820152602001611e78565b50506000910152565b60008251611eab818460208701611e75565b9190910192915050565b6020815260008251806020840152611ed4816040850160208701611e75565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220408f7da7067ee935447053c89a30b99c066a93106c0e62192f6617657e16442164736f6c63430008140033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PriceOracle> {
    return super.deploy(overrides || {}) as Promise<PriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  override connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
